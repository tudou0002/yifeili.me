<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ocaml on Yifei Li</title>
    <link>/tags/ocaml/</link>
    <description>Recent content in Ocaml on Yifei Li</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/ocaml/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Function Expressions in Ocaml</title>
      <link>/notes/function-expressions-in-ocaml/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/notes/function-expressions-in-ocaml/</guid>
      <description>Function plays a big role in Ocaml programming. What are the types of functions and how can we define a function in Ocaml?
Anonymous functions function p -&amp;gt; expr function x -&amp;gt; x*x (expr being an expression,nothing fancy) function x -&amp;gt; function y-&amp;gt; x+y (expr can also be a function expression)
Named functions Infix functions Higher Order functions Let&amp;rsquo;s look at an example and think about what type function apply is: let apply = function f -&amp;gt; function x -&amp;gt; f x The answer should be (&#39;a -&amp;gt; &#39;b) -&amp;gt; &#39;a -&amp;gt; &#39;b =&amp;lt;fun&amp;gt;</description>
    </item>
    
  </channel>
</rss>